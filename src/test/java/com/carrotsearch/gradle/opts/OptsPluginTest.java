/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.carrotsearch.gradle.opts;

import org.gradle.api.Project;
import org.gradle.api.plugins.ExtraPropertiesExtension;
import org.gradle.testfixtures.ProjectBuilder;
import org.junit.Assert;
import org.junit.Test;

/** A simple unit test. */
public class OptsPluginTest {
  @Test
  public void utilityMethods() {
    Project project = ProjectBuilder.builder().build();
    project.getPlugins().apply("com.carrotsearch.gradle.opts");

    OptsPluginExtension opts = project.getExtensions().findByType(OptsPluginExtension.class);
    Assert.assertNotNull(opts);

    String property1 = "non-existent";
    Object defValue = "default-value";
    Assert.assertEquals(defValue, Utilities.propertyOrDefault(project, property1, defValue));
    Assert.assertEquals(defValue, Utilities.envOrDefault(property1, defValue));
    Assert.assertEquals(
        defValue, Utilities.propertyOrEnvOrDefault(project, property1, property1, defValue));
  }

  @Test
  public void resolvesOptions() {
    Project project = ProjectBuilder.builder().build();
    project.getPlugins().apply("com.carrotsearch.gradle.opts");

    OptsPluginExtension opts = project.getExtensions().findByType(OptsPluginExtension.class);
    Assert.assertNotNull(opts);

    Object defValue = "default-value";

    Option option1 = opts.option(new Option(project, "option1", "This is an option", defValue));
    Assert.assertSame(option1.getValue(), defValue);

    ExtraPropertiesExtension ext = project.getExtensions().getExtraProperties();

    Option option2 = opts.option(new Option(project, "option2", "This is an option", defValue));
    ext.set("option2", "foo");
    Assert.assertEquals(option2.getValue(), "foo");

    Option option3 = opts.option(new Option(project, "option3", "This is an option", defValue));
    System.setProperty("option3", "bar");
    Assert.assertEquals(option3.getValue(), "bar");

    Assert.assertEquals(defValue, Utilities.propertyOrDefault(project, "non-existent", defValue));
    Assert.assertEquals(defValue, Utilities.envOrDefault("non-existent", defValue));
    Assert.assertEquals(
        defValue,
        Utilities.propertyOrEnvOrDefault(project, "non-existent", "non-existent", defValue));
  }
}
